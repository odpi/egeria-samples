---
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the ODPi Egeria project.

- name: setup Information Server variables
  import_role:
    name: ibm.infosvr
    tasks_from: setup_vars.yml

- name: setup Information Server certificate
  import_role:
    name: ibm.infosvr
    tasks_from: get_certificate.yml

- name: list OpenIGC bundles
  uri:
    url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports.console }}\
          /ibm/iis/igc-rest/v1/bundles"
    method: GET
    user: "{{ ibm_infosvr_user_isadmin }}"
    password: "{{ ibm_infosvr_upwd_isadmin }}"
    force_basic_auth: yes
    status_code: 200
    validate_certs: no
    timeout: 10
  register: __egeria_samples_openigc_bundles
  when: ('ibm_information_server_domain' in group_names)

- name: remove OMRS bundle
  uri:
    url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports.console }}\
          /ibm/iis/igc-rest/v1/bundles/OMRS"
    method: DELETE
    status_code: 200
    validate_certs: no
    timeout: 10
    headers:
      Cookie: "{{ __egeria_samples_openigc_bundles.set_cookie }}"
  when: >
    ('ibm_information_server_domain' in group_names)
    and ('OMRS' in __egeria_samples_openigc_bundles.json)

- include_tasks: query-and-remove-type.yml
  vars:
    type: data_file_record
    conditions:
      - { property: "data_file.host.name", operator: "=", value: "{{ groups['ibm_information_server_engine'][0] | upper }}" }
      - { property: "data_file.path", operator: "=", value: "{{ egeria_samples_minimal_targets.files }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: data_file
    conditions:
      - { property: "host.name", operator: "=", value: "{{ groups['ibm_information_server_engine'][0] | upper }}" }
      - { property: "path", operator: "=", value: "{{ egeria_samples_minimal_targets.files }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: data_file_folder
    conditions:
      - { property: "name", operator: "=", value: "/" }
      - { property: "host.name", operator: "=", value: "{{ groups['ibm_information_server_engine'][0] | upper }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: database_table
    conditions:
      - { property: "database_schema.database.name", operator: "=", value: "MINIMAL" }
      - { property: "database_schema.database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: database_schema
    conditions:
      - { property: "database.name", operator: "=", value: "MINIMAL" }
      - { property: "database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: database
    conditions:
      - { property: "name", operator: "=", value: "MINIMAL" }
      - { property: "host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: information_governance_rule
    conditions:
      - { property: "name", operator: "like {0}%", value: "Job metadata will be periodically synced through ODPi Egeria's Data Engine OMAS" }

- name: close session
  uri:
    url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}/ibm/iis/igc-rest/v1/logout/"
    method: GET
    validate_certs: no
    headers:
      Cookie: "{{ __egeria_samples_openigc_bundles.set_cookie }}"
  when: ('ibm_information_server_domain' in group_names)

- name: list DataStage projects
  shell: >
    source ~/.bashrc &&
    source dsenv &&
    ./bin/dsadmin
    -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
    -user {{ ibm_infosvr_users.isadmin }} -password {{ ibm_infosvr_upwds.isadmin }}
    -server {{ groups['ibm_information_server_engine'][0] | upper }}
    -listprojects
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_locations.linux }}/Server/DSEngine"
  become: yes
  register: __minimal_projects_list
  changed_when: False
  when: ('ibm_information_server_engine' in group_names)

- name: remove DataStage project
  shell: >
    source ~/.bashrc &&
    source dsenv &&
    ./bin/dsadmin
    -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
    -user {{ ibm_infosvr_users.isadmin }} -password {{ ibm_infosvr_upwds.isadmin }}
    -server {{ groups['ibm_information_server_engine'][0] | upper }}
    -deleteproject minimal
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_locations.linux }}/Server/DSEngine"
  become: yes
  when: >
    ('ibm_information_server_engine' in group_names)
    and __minimal_projects_list.stdout.find('minimal') != -1

- name: remove cached files
  file:
    path: cache/__ibm_infosvr_cert_root.crt
    state: absent
  delegate_to: localhost

- name: list Metadata Asset Manager import areas
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/imam.sh
    -u {{ ibm_infosvr_users.isadmin }}
    -w {{ ibm_infosvr_upwds.isadmin }}
    -a list
    --type area
    -nof
  args:
    executable: /bin/bash
  when: ('ibm_information_server_engine' in group_names)
  register: __minimal_existing_import_areas

- name: remove Metadata Asset Manager file import area
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/imam.sh
    -u {{ ibm_infosvr_users.isadmin }}
    -w {{ ibm_infosvr_upwds.isadmin }}
    -n Minimal_{{ item }}
    -a delete
    --type area
  args:
    executable: /bin/bash
  when: >
    ('ibm_information_server_engine' in group_names)
    and __minimal_existing_import_areas.stdout.find('Minimal_'~item) != -1
  with_items: "{{ egeria_samples_minimal_files }}"

- name: remove Metadata Asset Manager database import areas
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/imam.sh
    -u {{ ibm_infosvr_users.isadmin }}
    -w {{ ibm_infosvr_upwds.isadmin }}
    -n Minimal_{{ item }}
    -a delete
    --type area
  args:
    executable: /bin/bash
  when: >
    ('ibm_information_server_engine' in group_names)
    and __minimal_existing_import_areas.stdout.find('Minimal_'~item) != -1
  with_items: "{{ egeria_samples_minimal_tables }}"
